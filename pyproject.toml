[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]

[tool.black]
known_first_party = ["secret_transfer", "tests"]
line-length = 120
target-version = ["py39"]

[tool.coverage.report]
exclude_lines = [
  "@(abc\\.)?abstractmethod",
  "class .*Protocol\\):",
  "def __repr__",
  "if __name__ == .__main__.:",
  "if typing.TYPE_CHECKING:",
  "pragma: no cover",
  "raise NotImplementedError",
]

[tool.poetry]
authors = ["ovsds <github@ovsds.ru>"]
description = "Yaml-based secret manager for secret load/set/clean."
keywords = ["secret", "transfer", "yaml"]
license = "MIT"
name = "secret-transfer"
readme = "README.md"
repository = "https://github.com/ovsds/secret-transfer"
version = "0.2.0"

[tool.poetry.dependencies]
click = "^8.1.3"
lazy-object-proxy = "^1.9.0"
pydantic = "^2.0.3"
python = ">=3.9,<3.13"
python-dotenv = "^1.0.0"
pyyaml = "^6.0"

[tool.poetry.dev-dependencies]
black = "*"
coverage = "*"
pytest = "*"
pytest-mock = "*"
ruff = "*"
sort-all = "*"
toml-sort = "*"

[tool.poetry.scripts]
secret-transfer = 'secret_transfer.cli:main'

[[tool.poetry.source]]
name = "PyPI"
priority = "primary"

[tool.pyright]
exclude = ["**/__pycache__"]
include = ["secret_transfer", "tests"]
pythonPlatform = "All"
pythonVersion = "3.9"
reportMissingTypeStubs = "warning"
reportUnknownMemberType = "none"
typeCheckingMode = "strict"
useLibraryCodeForTypes = true
venv = ".venv"
venvPath = '.'

[tool.pytest.ini_options]
log_cli = true
log_date_format = "%Y-%m-%d %H:%M:%S"
log_format = "[%(asctime)s][%(levelname)s][%(name)s][%(pathname)s:%(lineno)d] %(message)s"
log_level = "WARNING"
pythonpath = "."

[tool.ruff]
target-version = "py39"

[tool.ruff.lint]
extend-select = [
  "I", # isort
  "UP", # pyupgrade
]

[tool.tomlsort]
all = true
ignore_case = true
in_place = true
trailing_comma_inline_array = true
